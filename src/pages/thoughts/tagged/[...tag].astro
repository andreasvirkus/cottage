---
import { type CollectionEntry, getCollection } from 'astro:content'
import Base from '../../../layouts/Base.astro'
import PostListing from '../../../components/PostListing.astro';

type Props = CollectionEntry<'thoughts'>

export async function getStaticPaths() {
  const allPosts = await getCollection('thoughts')
  const uniqueTags = [...new Set(allPosts.map((post: any) => post.data.tags).flat())];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post: any) => post.data.tags?.includes(tag));
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const allPosts = await getCollection('thoughts')
const posts = await getStaticPaths();
const postsForTag = posts.find((taggedPosts) => taggedPosts.params.tag === tag);
const tags = [...new Set(allPosts.map((post: any) => post.data.tags).flat())];
---
<Base>
  <h1>thoughts</h1>
  <p>
    Here you can read 'bout my questionable opinions on anything dev-related or just nice tips/hacks I enjoy having in
    my utility belt.
  </p>
  <hr />

  <div class="tags">
    {
      Array.from(tags).map((tag) => (
        <a href={'/tags/' + tag} class="tag">
          <span class="tag-label">{tag}</span>
        </a>
      ))
    }
  </div>

  <section class="thoughts-list">
    {postsForTag &&}
    <ul>
      { postsForTag.props.posts.map((post) => <li><PostListing slug={post.slug} title={post.data.title} gradient={post.data.heroImage} date={post.data.pubDate} /></li>)}
    </ul>
  </section>
</Base>